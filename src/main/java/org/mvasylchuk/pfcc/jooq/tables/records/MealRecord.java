/*
 * This file is generated by jOOQ.
 */
package org.mvasylchuk.pfcc.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.mvasylchuk.pfcc.jooq.tables.Meal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MealRecord extends UpdatableRecordImpl<MealRecord> implements Record10<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.meal.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.meal.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.meal.weight</code>.
     */
    public void setWeight(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.meal.weight</code>.
     */
    public BigDecimal getWeight() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.meal.protein</code>.
     */
    public void setProtein(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.meal.protein</code>.
     */
    public BigDecimal getProtein() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.meal.fat</code>.
     */
    public void setFat(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.meal.fat</code>.
     */
    public BigDecimal getFat() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.meal.carbohydrates</code>.
     */
    public void setCarbohydrates(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.meal.carbohydrates</code>.
     */
    public BigDecimal getCarbohydrates() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.meal.calories</code>.
     */
    public void setCalories(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.meal.calories</code>.
     */
    public BigDecimal getCalories() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.meal.food_id</code>.
     */
    public void setFoodId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.meal.food_id</code>.
     */
    public Long getFoodId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.meal.dish_id</code>.
     */
    public void setDishId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.meal.dish_id</code>.
     */
    public Long getDishId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.meal.eaten_on</code>.
     */
    public void setEatenOn(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.meal.eaten_on</code>.
     */
    public LocalDateTime getEatenOn() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.meal.owner_id</code>.
     */
    public void setOwnerId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.meal.owner_id</code>.
     */
    public Long getOwnerId() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, LocalDateTime, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, Long, Long, LocalDateTime, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Meal.MEAL.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Meal.MEAL.WEIGHT;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Meal.MEAL.PROTEIN;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Meal.MEAL.FAT;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Meal.MEAL.CARBOHYDRATES;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Meal.MEAL.CALORIES;
    }

    @Override
    public Field<Long> field7() {
        return Meal.MEAL.FOOD_ID;
    }

    @Override
    public Field<Long> field8() {
        return Meal.MEAL.DISH_ID;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Meal.MEAL.EATEN_ON;
    }

    @Override
    public Field<Long> field10() {
        return Meal.MEAL.OWNER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getWeight();
    }

    @Override
    public BigDecimal component3() {
        return getProtein();
    }

    @Override
    public BigDecimal component4() {
        return getFat();
    }

    @Override
    public BigDecimal component5() {
        return getCarbohydrates();
    }

    @Override
    public BigDecimal component6() {
        return getCalories();
    }

    @Override
    public Long component7() {
        return getFoodId();
    }

    @Override
    public Long component8() {
        return getDishId();
    }

    @Override
    public LocalDateTime component9() {
        return getEatenOn();
    }

    @Override
    public Long component10() {
        return getOwnerId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getWeight();
    }

    @Override
    public BigDecimal value3() {
        return getProtein();
    }

    @Override
    public BigDecimal value4() {
        return getFat();
    }

    @Override
    public BigDecimal value5() {
        return getCarbohydrates();
    }

    @Override
    public BigDecimal value6() {
        return getCalories();
    }

    @Override
    public Long value7() {
        return getFoodId();
    }

    @Override
    public Long value8() {
        return getDishId();
    }

    @Override
    public LocalDateTime value9() {
        return getEatenOn();
    }

    @Override
    public Long value10() {
        return getOwnerId();
    }

    @Override
    public MealRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MealRecord value2(BigDecimal value) {
        setWeight(value);
        return this;
    }

    @Override
    public MealRecord value3(BigDecimal value) {
        setProtein(value);
        return this;
    }

    @Override
    public MealRecord value4(BigDecimal value) {
        setFat(value);
        return this;
    }

    @Override
    public MealRecord value5(BigDecimal value) {
        setCarbohydrates(value);
        return this;
    }

    @Override
    public MealRecord value6(BigDecimal value) {
        setCalories(value);
        return this;
    }

    @Override
    public MealRecord value7(Long value) {
        setFoodId(value);
        return this;
    }

    @Override
    public MealRecord value8(Long value) {
        setDishId(value);
        return this;
    }

    @Override
    public MealRecord value9(LocalDateTime value) {
        setEatenOn(value);
        return this;
    }

    @Override
    public MealRecord value10(Long value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public MealRecord values(Long value1, BigDecimal value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, Long value7, Long value8, LocalDateTime value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MealRecord
     */
    public MealRecord() {
        super(Meal.MEAL);
    }

    /**
     * Create a detached, initialised MealRecord
     */
    public MealRecord(Long id, BigDecimal weight, BigDecimal protein, BigDecimal fat, BigDecimal carbohydrates, BigDecimal calories, Long foodId, Long dishId, LocalDateTime eatenOn, Long ownerId) {
        super(Meal.MEAL);

        setId(id);
        setWeight(weight);
        setProtein(protein);
        setFat(fat);
        setCarbohydrates(carbohydrates);
        setCalories(calories);
        setFoodId(foodId);
        setDishId(dishId);
        setEatenOn(eatenOn);
        setOwnerId(ownerId);
        resetChangedOnNotNull();
    }
}
