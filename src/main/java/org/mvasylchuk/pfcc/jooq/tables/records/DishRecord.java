/*
 * This file is generated by jOOQ.
 */
package org.mvasylchuk.pfcc.jooq.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.mvasylchuk.pfcc.jooq.tables.Dish;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DishRecord extends UpdatableRecordImpl<DishRecord> implements Record12<Long, String, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, LocalDateTime, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dish.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dish.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.dish.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dish.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.dish.food_id</code>.
     */
    public void setFoodId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dish.food_id</code>.
     */
    public Long getFoodId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.dish.recipe_weight</code>.
     */
    public void setRecipeWeight(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.dish.recipe_weight</code>.
     */
    public BigDecimal getRecipeWeight() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.dish.cooked_weight</code>.
     */
    public void setCookedWeight(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.dish.cooked_weight</code>.
     */
    public BigDecimal getCookedWeight() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.dish.protein</code>.
     */
    public void setProtein(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.dish.protein</code>.
     */
    public BigDecimal getProtein() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.dish.fat</code>.
     */
    public void setFat(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.dish.fat</code>.
     */
    public BigDecimal getFat() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.dish.carbohydrates</code>.
     */
    public void setCarbohydrates(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.dish.carbohydrates</code>.
     */
    public BigDecimal getCarbohydrates() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.dish.calories</code>.
     */
    public void setCalories(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.dish.calories</code>.
     */
    public BigDecimal getCalories() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>public.dish.cooked_on</code>.
     */
    public void setCookedOn(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.dish.cooked_on</code>.
     */
    public LocalDateTime getCookedOn() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.dish.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.dish.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>public.dish.owner_id</code>.
     */
    public void setOwnerId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.dish.owner_id</code>.
     */
    public Long getOwnerId() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, LocalDateTime, Boolean, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, String, Long, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, BigDecimal, LocalDateTime, Boolean, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Dish.DISH.ID;
    }

    @Override
    public Field<String> field2() {
        return Dish.DISH.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Dish.DISH.FOOD_ID;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Dish.DISH.RECIPE_WEIGHT;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Dish.DISH.COOKED_WEIGHT;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Dish.DISH.PROTEIN;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Dish.DISH.FAT;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Dish.DISH.CARBOHYDRATES;
    }

    @Override
    public Field<BigDecimal> field9() {
        return Dish.DISH.CALORIES;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Dish.DISH.COOKED_ON;
    }

    @Override
    public Field<Boolean> field11() {
        return Dish.DISH.DELETED;
    }

    @Override
    public Field<Long> field12() {
        return Dish.DISH.OWNER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getFoodId();
    }

    @Override
    public BigDecimal component4() {
        return getRecipeWeight();
    }

    @Override
    public BigDecimal component5() {
        return getCookedWeight();
    }

    @Override
    public BigDecimal component6() {
        return getProtein();
    }

    @Override
    public BigDecimal component7() {
        return getFat();
    }

    @Override
    public BigDecimal component8() {
        return getCarbohydrates();
    }

    @Override
    public BigDecimal component9() {
        return getCalories();
    }

    @Override
    public LocalDateTime component10() {
        return getCookedOn();
    }

    @Override
    public Boolean component11() {
        return getDeleted();
    }

    @Override
    public Long component12() {
        return getOwnerId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getFoodId();
    }

    @Override
    public BigDecimal value4() {
        return getRecipeWeight();
    }

    @Override
    public BigDecimal value5() {
        return getCookedWeight();
    }

    @Override
    public BigDecimal value6() {
        return getProtein();
    }

    @Override
    public BigDecimal value7() {
        return getFat();
    }

    @Override
    public BigDecimal value8() {
        return getCarbohydrates();
    }

    @Override
    public BigDecimal value9() {
        return getCalories();
    }

    @Override
    public LocalDateTime value10() {
        return getCookedOn();
    }

    @Override
    public Boolean value11() {
        return getDeleted();
    }

    @Override
    public Long value12() {
        return getOwnerId();
    }

    @Override
    public DishRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DishRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DishRecord value3(Long value) {
        setFoodId(value);
        return this;
    }

    @Override
    public DishRecord value4(BigDecimal value) {
        setRecipeWeight(value);
        return this;
    }

    @Override
    public DishRecord value5(BigDecimal value) {
        setCookedWeight(value);
        return this;
    }

    @Override
    public DishRecord value6(BigDecimal value) {
        setProtein(value);
        return this;
    }

    @Override
    public DishRecord value7(BigDecimal value) {
        setFat(value);
        return this;
    }

    @Override
    public DishRecord value8(BigDecimal value) {
        setCarbohydrates(value);
        return this;
    }

    @Override
    public DishRecord value9(BigDecimal value) {
        setCalories(value);
        return this;
    }

    @Override
    public DishRecord value10(LocalDateTime value) {
        setCookedOn(value);
        return this;
    }

    @Override
    public DishRecord value11(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public DishRecord value12(Long value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public DishRecord values(Long value1, String value2, Long value3, BigDecimal value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, BigDecimal value8, BigDecimal value9, LocalDateTime value10, Boolean value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DishRecord
     */
    public DishRecord() {
        super(Dish.DISH);
    }

    /**
     * Create a detached, initialised DishRecord
     */
    public DishRecord(Long id, String name, Long foodId, BigDecimal recipeWeight, BigDecimal cookedWeight, BigDecimal protein, BigDecimal fat, BigDecimal carbohydrates, BigDecimal calories, LocalDateTime cookedOn, Boolean deleted, Long ownerId) {
        super(Dish.DISH);

        setId(id);
        setName(name);
        setFoodId(foodId);
        setRecipeWeight(recipeWeight);
        setCookedWeight(cookedWeight);
        setProtein(protein);
        setFat(fat);
        setCarbohydrates(carbohydrates);
        setCalories(calories);
        setCookedOn(cookedOn);
        setDeleted(deleted);
        setOwnerId(ownerId);
        resetChangedOnNotNull();
    }
}
